<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Project AIR – Documentation</title>
    <link>https://tibcosoftware.github.io/labs-air/docs/</link>
    <description>Recent content in Documentation on Project AIR</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="https://tibcosoftware.github.io/labs-air/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docs: Hackathon</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/hackathon/</link>
      <pubDate>Wed, 10 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/hackathon/</guid>
      <description>
        
        
        &lt;p&gt;In Ideation phase until January 14, 2022 &lt;div class=&#34;fix&#34;&gt;&lt;img src=&#34;./TIBCO-Labs.png&#34; width=&#34;300px&#34;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;style&gt;
    .fix{
        transform: rotate(-8deg);
        position: fixed;
        z-index: 1000;
        left: 48em;
        top: 6em;
    }

	#clockdiv{
	font-family: sans-serif;
	color: #fff;
	display: inline-block;
	font-weight: 100;
	text-align: center;
	font-size: 20px;
	}

	#clockdiv &gt; div{
	padding: 6px;
	border-radius: 3px;
	background: #1774e5;
	display: inline-block;
	}

	#clockdiv div &gt; span{
	padding: 10px;
	border-radius: 3px;
	background: #0e4f9e;
	display: inline-block;
	}

	.smalltext{
	padding-top: 5px;
	font-size: 12px;
	}

	#targetdate {
	  text-align: center;
	  font-size: 60px;
	  margin-top: 0px;
	}
&lt;/style&gt;
&lt;p id=&#34;targetdate&#34;&gt;&lt;/p&gt;
&lt;div id=&#34;clockdiv&#34;&gt;
		&lt;div&gt;
		  &lt;span class=&#34;days&#34;&gt;&lt;/span&gt;
		  &lt;div class=&#34;smalltext&#34;&gt;Days&lt;/div&gt;
		&lt;/div&gt;
		&lt;div&gt;
		  &lt;span class=&#34;hours&#34;&gt;&lt;/span&gt;
		  &lt;div class=&#34;smalltext&#34;&gt;Hours&lt;/div&gt;
		&lt;/div&gt;
		&lt;div&gt;
		  &lt;span class=&#34;minutes&#34;&gt;&lt;/span&gt;
		  &lt;div class=&#34;smalltext&#34;&gt;Minutes&lt;/div&gt;
		&lt;/div&gt;
		&lt;div&gt;
		  &lt;span class=&#34;seconds&#34;&gt;&lt;/span&gt;
		  &lt;div class=&#34;smalltext&#34;&gt;Seconds&lt;/div&gt;
		&lt;/div&gt;
&lt;/div&gt;
&lt;script&gt;
function getTimeRemaining(endtime) {
  const total = Date.parse(endtime) - Date.parse(new Date());
  const seconds = Math.floor((total / 1000) % 60);
  const minutes = Math.floor((total / 1000 / 60) % 60);
  const hours = Math.floor((total / (1000 * 60 * 60)) % 24);
  const days = Math.floor(total / (1000 * 60 * 60 * 24));
  
  return {total,days,hours,minutes,seconds};
}

function initializeClock(id, endtime) {
  const clock = document.getElementById(id);
  const daysSpan = clock.querySelector(&#39;.days&#39;);
  const hoursSpan = clock.querySelector(&#39;.hours&#39;);
  const minutesSpan = clock.querySelector(&#39;.minutes&#39;);
  const secondsSpan = clock.querySelector(&#39;.seconds&#39;);

  function updateClock() {
    const t = getTimeRemaining(endtime);

    daysSpan.innerHTML = t.days;
    hoursSpan.innerHTML = (&#39;0&#39; + t.hours).slice(-2);
    minutesSpan.innerHTML = (&#39;0&#39; + t.minutes).slice(-2);
    secondsSpan.innerHTML = (&#39;0&#39; + t.seconds).slice(-2);

    if (t.total &lt;= 0) {
      clearInterval(timeinterval);
    }
  }

  updateClock();
  const timeinterval = setInterval(updateClock, 1000);
}

const deadline = new Date(Date.parse(new Date(&#34;Jan 14, 2022 10:00:00 PST&#34;)));
initializeClock(&#39;clockdiv&#39;, deadline);

&lt;/script&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;
&lt;b&gt;Not a participant yet?&lt;/b&gt; Then you definitely want to check this out: &lt;br&gt;&lt;a href=&#34;https://www.hackerearth.com/challenges/hackathon/tibco-labs-iot-and-sustainability-hack/&#34;&gt;TIBCO LABS IoT and sustainability Hack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;b&gt;For all others&lt;/b&gt; … welcome to Project AIR! We are excited to have our project be part of this hackathon, and to work with you on innovative solutions in the area of environmental sustainability.&lt;/p&gt;
&lt;p&gt;As you browse through the materials and learn more about Project AIR, we just want to note that we are working hard to update the docs with more details, including additional tutorials and videos. The Getting Started materials should be enough to help you with the Ideation phase of the hackathon, but let us know via the HackerEarth Discussion forum if you have any questions!&lt;/p&gt;
&lt;p&gt;As we get closer to the Development phase, we will be releasing more materials. So be sure to check back, or watch the HackerEarth site for details.&lt;/p&gt;
&lt;p&gt;&lt;b&gt;Happy Hacking!&lt;/b&gt;&lt;/p&gt;
&lt;br&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Overview</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/overview/</link>
      <pubDate>Fri, 22 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/overview/</guid>
      <description>
        
        
        &lt;p&gt;With Project AIR, you can register and interact with IoT Device Farm to process derived data anywhere that is needed and store the data as needed to analyze and address a large number of analytical use cases extending any layer of its architecture as needed.
Connect your IoT Device Farm and take action in TIBCO&amp;rsquo;s connected intelligence cloud.&lt;/p&gt;
&lt;h2 id=&#34;architecture&#34;&gt;Architecture&lt;/h2&gt;
&lt;p&gt;A sneak peek of AIR’s architecture, more details coming soon.&lt;/p&gt;
&lt;img width=&#34;90%&#34; src=&#34;Air-Overview.png&#34;&gt;
&lt;br&gt;&lt;br&gt;
&lt;p&gt;Fully open platform that can run anywhere to support the digitalization of the real world.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Register and Interact with IoT Devices&lt;/li&gt;
&lt;li&gt;Process IoT Data Regardless of Source&lt;/li&gt;
&lt;li&gt;Compute at the Edge&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;infrastructure&#34;&gt;Infrastructure&lt;/h3&gt;
&lt;p&gt;Cloud Agnostic Deployment&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AWS&lt;/li&gt;
&lt;li&gt;Azure *&lt;/li&gt;
&lt;li&gt;GCP *&lt;/li&gt;
&lt;li&gt;On-Prem *&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; * = Runs on pre-existing Kubernetes cluster&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;technology-stack&#34;&gt;Technology Stack&lt;/h3&gt;
&lt;p&gt;Edge to Cloud Ecosystem&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edge&lt;/li&gt;
&lt;li&gt;Cloud&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;extension-points&#34;&gt;Extension Points&lt;/h3&gt;
&lt;p&gt;System Pluggability&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Edge&lt;/li&gt;
&lt;li&gt;Data Endpoints&lt;/li&gt;
&lt;li&gt;UI&lt;/li&gt;
&lt;li&gt;Data Stores&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;github-repositories&#34;&gt;GitHub Repositories&lt;/h2&gt;
&lt;p&gt;TIBCO LABS Project AIR consist of multiple Repos &lt;a href=&#34;https://github.com/orgs/TIBCOSoftware/repositories?language=&amp;q=air&amp;sort=&amp;type=&#34; target=&#34;_blank&#34;&gt;full Query here&lt;/a&gt;.&lt;br&gt;
Here a quick Introduction &amp;hellip;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/TIBCOSoftware/labs-air&#34; target=&#34;_blank&#34;&gt;labs-air&lt;/a&gt;&lt;br&gt;
stores the Project Site and Documentation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/TIBCOSoftware/labs-air-ui&#34; target=&#34;_blank&#34;&gt;labs-air-ui&lt;/a&gt;&lt;br&gt;
AIR user Interface implemented using Angular.io&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/TIBCOSoftware/labs-air-edgex&#34; target=&#34;_blank&#34;&gt;labs-air-edgex&lt;/a&gt;&lt;br&gt;
configurations of EdgeX Foundry releated to AIR&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/TIBCOSoftware/labs-air-charts&#34; target=&#34;_blank&#34;&gt;labs-air-charts&lt;/a&gt;&lt;br&gt;
bootstraps a Project Air deployment on a Kubernetes cluster using the Helm package manager.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/TIBCOSoftware/labs-air-services&#34; target=&#34;_blank&#34;&gt;labs-air-services&lt;/a&gt;&lt;br&gt;
AIR platform backend and edge services based on TIBCO Flogo&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/TIBCOSoftware/labs-air-contrib&#34; target=&#34;_blank&#34;&gt;labs-air-contrib&lt;/a&gt;&lt;br&gt;
AIR platform releated TIBCO Flogo extensions, connectors, and functions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
      </description>
    </item>
    
    <item>
      <title>Docs: Getting Started</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/gettingstarted/</link>
      <pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/gettingstarted/</guid>
      <description>
        
        
        &lt;h1 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h1&gt;

  














  














  














&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;tabs-0&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link active tab-MacOs&#34;
        id=&#34;tabs-0-0-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-0-0&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;MacOs&amp;#34;);&#34;
        aria-controls=&#34;tabs-0-0&#34; aria-selected=&#34;true&#34;&gt;
        MacOs
      &lt;/a&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link tab-Linux&#34;
        id=&#34;tabs-0-1-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-0-1&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;Linux&amp;#34;);&#34;
        aria-controls=&#34;tabs-0-1&#34; aria-selected=&#34;false&#34;&gt;
        Linux
      &lt;/a&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link tab-Windows&#34;
        id=&#34;tabs-0-2-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-0-2&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;Windows&amp;#34;);&#34;
        aria-controls=&#34;tabs-0-2&#34; aria-selected=&#34;false&#34;&gt;
        Windows
      &lt;/a&gt;
    &lt;/li&gt;&lt;/ul&gt;


&lt;div class=&#34;tab-content&#34; id=&#34;tabs-0-content&#34;&gt;&lt;div class=&#34;tab-pane fade show active&#34;
        id=&#34;tabs-0-0&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-0-0-tab&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;
    MacOs Recommended: Version v11.6 Big Sur
    * Docker Desktop: 20.10.8
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-0-1&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-0-1-tab&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;
    Linux Recommended: Ubuntu v20.04.3 LTS
    * Docker: 20.10.9
    * Docker Compose: 1.28.2
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-0-2&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-0-2-tab&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;
    Windows Recommended: Version 10 Pro
    * Docker Desktop: 20.10.8
  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  
&lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Got more questions?&lt;/b&gt; please check the &lt;a href=&#34;#advanced-installer-tips&#34;&gt;Advance Installation Tips&lt;/a&gt; section below or reach out on &lt;a href=&#34;mailto:tibcolabs@tibco.com&#34;&gt;tibcolabs@tibco.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;helpful-urls&#34;&gt;helpful URL&amp;rsquo;s&lt;/h3&gt;
&lt;p&gt;some helpful URL&amp;rsquo;s to find your way quickly&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.docker.com/get-docker/&#34;&gt;https://docs.docker.com/get-docker/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; we try to review those in time. &lt;i&gt;Let us know in case a link is broken!&lt;/i&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;install-project-air-locally&#34;&gt;Install Project AIR Locally&lt;/h1&gt;
&lt;p&gt;TIBCO LABS Project AIR latest Release Site &lt;a href=&#34;https://github.com/TIBCOSoftware/labs-air/releases/latest&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

  














  














  














&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;tabs-1&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link active tab-MacOs&#34;
        id=&#34;tabs-1-0-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-1-0&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;MacOs&amp;#34;);&#34;
        aria-controls=&#34;tabs-1-0&#34; aria-selected=&#34;true&#34;&gt;
        MacOs
      &lt;/a&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link tab-Linux&#34;
        id=&#34;tabs-1-1-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-1-1&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;Linux&amp;#34;);&#34;
        aria-controls=&#34;tabs-1-1&#34; aria-selected=&#34;false&#34;&gt;
        Linux
      &lt;/a&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link tab-Windows&#34;
        id=&#34;tabs-1-2-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-1-2&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;Windows&amp;#34;);&#34;
        aria-controls=&#34;tabs-1-2&#34; aria-selected=&#34;false&#34;&gt;
        Windows
      &lt;/a&gt;
    &lt;/li&gt;&lt;/ul&gt;


&lt;div class=&#34;tab-content&#34; id=&#34;tabs-1-content&#34;&gt;&lt;div class=&#34;tab-pane fade show active&#34;
        id=&#34;tabs-1-0&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-1-0-tab&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;
    1. Download the darwin artifacts from the latest release site
    2. Extract the artifacts and go to the extracted folder
    3. Run the following command:
    
    ./install.sh

  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-1-1&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-1-1-tab&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;
    Download the linux artifacts from the latest release site
    1. Extract the artifacts and go to the extracted folder
    2. Run the following command:
    
    ./install.sh

  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-1-2&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-1-2-tab&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;
    Download the windows artifacts from the latest release site
    2. Extract the artifacts and go to the extracted folder
    3. Run the following command as Administrator:
   
    call install.cmd

  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  
&lt;/div&gt;

&lt;p&gt;After all the processes are done you see the following 3 docker compose groups in your docker dashboard&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_backend.png&#34; alt=&#34;AIR backend&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_lightcrane.png&#34; alt=&#34;AIR lightcrane&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_edgex.png&#34; alt=&#34;AIR edgex&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_edgex2.png&#34; alt=&#34;AIR edgex 2&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now you can access project air UI by typing: &lt;a href=&#34;http://localhost:8081&#34; target=&#34;_blank&#34;&gt;http - localhost:8081&lt;/a&gt; in your browser locally.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;b&gt;Got more questions?&lt;/b&gt; please check the &lt;a href=&#34;#advanced-installer-tips&#34;&gt;Advance Installation Tips&lt;/a&gt; section below or reach out on &lt;a href=&#34;mailto:tibcolabs@tibco.com&#34;&gt;tibcolabs@tibco.com&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;delete-project-air-locally&#34;&gt;Delete Project AIR Locally&lt;/h1&gt;

  














  














  














&lt;ul class=&#34;nav nav-tabs&#34; id=&#34;tabs-2&#34; role=&#34;tablist&#34;&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link active tab-MacOs&#34;
        id=&#34;tabs-2-0-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-2-0&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;MacOs&amp;#34;);&#34;
        aria-controls=&#34;tabs-2-0&#34; aria-selected=&#34;true&#34;&gt;
        MacOs
      &lt;/a&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link tab-Linux&#34;
        id=&#34;tabs-2-1-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-2-1&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;Linux&amp;#34;);&#34;
        aria-controls=&#34;tabs-2-1&#34; aria-selected=&#34;false&#34;&gt;
        Linux
      &lt;/a&gt;
    &lt;/li&gt;&lt;li class=&#34;nav-item&#34;&gt;
      &lt;a class=&#34;nav-link tab-Windows&#34;
        id=&#34;tabs-2-2-tab&#34; data-toggle=&#34;tab&#34; href=&#34;#tabs-2-2&#34; role=&#34;tab&#34; onclick=&#34;handleClick(&amp;#34;Windows&amp;#34;);&#34;
        aria-controls=&#34;tabs-2-2&#34; aria-selected=&#34;false&#34;&gt;
        Windows
      &lt;/a&gt;
    &lt;/li&gt;&lt;/ul&gt;


&lt;div class=&#34;tab-content&#34; id=&#34;tabs-2-content&#34;&gt;&lt;div class=&#34;tab-pane fade show active&#34;
        id=&#34;tabs-2-0&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-2-0-tab&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;
    1. Download the darwin artifacts from the latest release site
    2. Extract the artifacts and go to the extracted folder
    3. Run the following command:
   
    ./remove.sh

  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-2-1&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-2-1-tab&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;
    Download the linux artifacts from the latest release site
    1. Extract the artifacts and go to the extracted folder
    2. Run the following command:
    
    ./remove.sh

  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;div class=&#34;tab-pane fade&#34;
        id=&#34;tabs-2-2&#34; role=&#34;tabpanel&#34; aria-labelled-by=&#34;tabs-2-2-tab&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-en&#34; data-lang=&#34;en&#34;&gt;
    Download the windows artifacts from the latest release site
    2. Extract the artifacts and go to the extracted folder
    3. Run the following command as Administrator:
    
    call remove.cmd

  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  
&lt;/div&gt;

&lt;h1 id=&#34;advanced-installer-tips&#34;&gt;Advanced installer tips&lt;/h1&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Configuring Endpoints</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/userguide/configuringendpoints/</link>
      <pubDate>Mon, 25 May 2020 12:33:17 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/userguide/configuringendpoints/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Once a Device Grouping has been discovered by project AIR, a connection has been established with edge devices.
In this section we show how to configure Messaging Protocos, Data Stores and ML Model connections which can be used in Data Pipelines to receive, process data from devices, and publish device data to other edge or cloud applications.
The following steps will guide you through the configuration of messaging protocols, data stores and ML models connections.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-edgex&#34;&gt;Prerequisite 1: Edgex&lt;/h4&gt;
&lt;p&gt;Edgex is a vendor neutral open source platform at the edge of the network that interacts with physical devices, sensors, actuators and other IoT objects. It enables the interoperability between devices and applications at the edge and at the cloud.
Edgex will be installed as part of the AIR installation.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;edgexfoundry.org&#34;&gt;Edgex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Every running Edgex platform uses an internal messaging bus to move data through the different layers at the edge. From a running instance of Edgex, gather the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transport used: MQTT, ZeroMQ or Redis&lt;/li&gt;
&lt;li&gt;Connection URL&lt;/li&gt;
&lt;li&gt;Connection credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-2-air&#34;&gt;Prerequisite 2: AIR&lt;/h4&gt;
&lt;p&gt;Project AIR installation provides a messaging broker for sending data from edge devices to wherever the AIR infrastructure is running (in premise, cloud).  The messaging infrastructure is used by AIR core components and also can be used by any application requiring to receive data from edge devices and data flows.&lt;/p&gt;
&lt;p&gt;From a running AIR installation, gather the following information:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Transport used: MQTT, Kafka or TCM&lt;/li&gt;
&lt;li&gt;Connection URL&lt;/li&gt;
&lt;li&gt;Connection credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The following tables provide default connection details for the basic demo example.&lt;/p&gt;
&lt;h4 id=&#34;edgex-mqtt&#34;&gt;Edgex MQTT&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hostname&lt;/td&gt;
&lt;td&gt;edgex-mqtt-broker&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Port&lt;/td&gt;
&lt;td&gt;1883&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Topic&lt;/td&gt;
&lt;td&gt;edgexevents&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Username&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Password&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;air-mqtt&#34;&gt;AIR MQTT&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hostname&lt;/td&gt;
&lt;td&gt;mosquitto&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Port&lt;/td&gt;
&lt;td&gt;31883&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Topic&lt;/td&gt;
&lt;td&gt;EdgexGatewayData&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Username&lt;/td&gt;
&lt;td&gt;mqtt_admin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Password&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;air-notifications-mqtt&#34;&gt;AIR Notifications MQTT&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Hostname&lt;/td&gt;
&lt;td&gt;mosquitto&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Port&lt;/td&gt;
&lt;td&gt;31883&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Topic&lt;/td&gt;
&lt;td&gt;EdgexGatewayNotification&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Username&lt;/td&gt;
&lt;td&gt;mqtt_admin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Password&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;prerequisite-3-data-store-information&#34;&gt;Prerequisite 3: Data Store Information&lt;/h4&gt;
&lt;p&gt;Device data can be stored in one or several data stores depending on the use case requirements. Gather the following information for each data store:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connection URL&lt;/li&gt;
&lt;li&gt;Connection Credentials&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;prerequisite-3-data-store-table-setup&#34;&gt;Prerequisite 3: Data Store Table Setup&lt;/h4&gt;
&lt;p&gt;For each required data store, the user needs to configure the data store and create tables to store the data. 
Project AIR provides scripts with SQL commands to create the required artifacts.&lt;/p&gt;
&lt;p&gt;Following is an example sql script to create the artifact for a Postgres Database.
&lt;a href=&#34;./setup.sql&#34;&gt;Postgres SQL script&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;accessing-endpoints-configuration&#34;&gt;Accessing Endpoints Configuration&lt;/h2&gt;
&lt;h4 id=&#34;step-1-from-the-gateways-page-select-the-device-group-you-want-to-configure&#34;&gt;Step 1: From the Gateways page, select the Device Group you want to configure.&lt;/h4&gt;
&lt;h4 id=&#34;step-2-click-the-endpoints-configuration-icon&#34;&gt;Step 2: Click the Endpoints Configuration Icon.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_endpoint_gateway.png&#34; alt=&#34;Gateway Endpoint Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-the-endpoint-configuration-page-should-be-displayed&#34;&gt;Step 3: The Endpoint configuration page should be displayed.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_endpoint.png&#34; alt=&#34;Gateway Endpoint Config image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-messaging-protocols&#34;&gt;Adding Messaging Protocols&lt;/h2&gt;
&lt;h4 id=&#34;step-1-select-the-desired-protocol-from-the-pulldown-menu-under-the-protocol-details-panel&#34;&gt;Step 1: Select the desired protocol from the pulldown menu under the Protocol Details panel&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_mqtt_1.png&#34; alt=&#34;Adding Protocol MQTT1 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-enter-required-information-for-the-selected-protocol&#34;&gt;Step 2: Enter required information for the selected protocol&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_mqtt_2.png&#34; alt=&#34;Adding Protocol MQTT2 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-click-the-add-protocol-button-the-new-protocol-configuration-should-be-shown-in-the-inbound-protocols-panel&#34;&gt;Step 2: Click the Add Protocol button. The new protocol configuration should be shown in the Inbound Protocols panel&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_mqtt_3.png&#34; alt=&#34;Adding Protocol MQTT2 image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;adding-data-stores&#34;&gt;Adding Data Stores&lt;/h2&gt;
&lt;h4 id=&#34;step-1-click-the-data-stores-tab&#34;&gt;Step 1: Click the Data Stores tab&lt;/h4&gt;
&lt;h4 id=&#34;step-2-select-the-desired-data-store-from-the-pulldown-menu-under-the-datastore-details-panel&#34;&gt;Step 2: Select the desired data store from the pulldown menu under the DataStore Details panel&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_postgres_1.png&#34; alt=&#34;Adding Postgres1 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-enter-required-information-for-the-selected-data-store&#34;&gt;Step 3: Enter required information for the selected data store&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_postgres_2.png&#34; alt=&#34;Adding Postgres2 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-4-click-the-add-data-store-button-the-new-data-store-configuration-should-be-shown-in-the-data-stores-panel&#34;&gt;Step 4: Click the Add Data Store button. The new data store configuration should be shown in the Data Stores panel&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_postgres_3.png&#34; alt=&#34;Adding Postgres3 image&#34;&gt;&lt;/p&gt;
&lt;p&gt;Note that before using the data store in a pipeline, the AIR required tables need to be setup.  Project AIR provides scripts for the creation of the required tables for all the different data stores.  See pre-requisites section for details.&lt;/p&gt;
&lt;h2 id=&#34;adding-ml-model-connections&#34;&gt;Adding ML Model Connections&lt;/h2&gt;
&lt;h4 id=&#34;step-1-click-the-models-tab&#34;&gt;Step 1: Click the Models tab&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_models_1.png&#34; alt=&#34;Adding Models1 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-enter-the-model-information-under-the-model-details-panel&#34;&gt;Step 2: Enter the model information under the Model Details panel&lt;/h4&gt;
&lt;p&gt;Scope: select either GLOBAL or GATEWAY:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GLOBAL means the connection will be available and visible to all the pipeline configuration across&lt;/li&gt;
&lt;li&gt;GATEWAY means the connection will be visible only to the pipelines in the current gateway.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Name: is the name of the model connection&lt;/p&gt;
&lt;p&gt;URL: is the address of the model&amp;rsquo;s REST interface.&lt;/p&gt;
&lt;p&gt;Input Template: allow users to provide a json schema definition of the input the model is expecting.  Project air provides template keys that allow device data to be mapped to the required fields in the model.&lt;/p&gt;
&lt;p&gt;Description: allow users to provide a description of what the model does.  This information will be available to users when configuring pipelines.&lt;/p&gt;
&lt;h4 id=&#34;step-3-enter-required-information-for-the-model-connection&#34;&gt;Step 3: Enter required information for the model connection&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_models_2.png&#34; alt=&#34;Adding Models2 image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-4-click-the-add-model-button-the-new-model-connection-configuration-should-be-shown-in-the-models-panel&#34;&gt;Step 4: Click the Add Model button. The new model connection configuration should be shown in the Models panel&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_models_3.png&#34; alt=&#34;Adding Models3 image&#34;&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Pipeline Activities</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/userguide/pipelineactivities/</link>
      <pubDate>Mon, 25 May 2020 12:33:17 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/userguide/pipelineactivities/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Projet AIR pipeline editor is a wizard driven tool that allows you to create data pipelines or data flows.
Each pipeline represents specific business logic in an app. A pipeline or data flow contains one or more activities.&lt;/p&gt;
&lt;p&gt;The pipelines allow you to implement the business logic as a process. You can visually design the flows using the UI. A pipeline can consist of one or more activities that perform a specific task. Activities are linked in order to facilitate the flow of data between them. The pipeline execution is started by a subscriber.&lt;/p&gt;
&lt;p&gt;The following activities are available by default in all pipelines. It consists of subscribers, activities and publishers that may be commonly used by any pipeline. A subscriber initiates the pipeline in which it appears. An activity is used to perform a task on the data received by a subscriber. A publisher is used publish data to other pipelines or to other systems.&lt;/p&gt;
&lt;h2 id=&#34;data-subscriber&#34;&gt;Data Subscriber&lt;/h2&gt;
&lt;p&gt;Data Subscriber is used to receive events and activate a pipeline. Events are originated from IoT devices.&lt;/p&gt;
&lt;p&gt;Data Subscriber receive IoT events from data sources such as MQTT, Kafka, AMQP and so on.&lt;/p&gt;
&lt;p&gt;Project AIR pipelines receive events with the following JSON schema which is propagated through all the pipeline.&lt;/p&gt;
&lt;p&gt;After adding a subscriber activity, you must configure it with the transport protocol from the list of configured protocols.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;$schema&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://json-schema.org/draft-04/schema#&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;device&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;gateway&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;readings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;device&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;!--   VERSION 2
```JSON
{
    &#34;$schema&#34;: &#34;http://json-schema.org/draft-04/schema#&#34;,
    &#34;type&#34;: &#34;object&#34;,
    &#34;properties&#34;: {
        &#34;id&#34;: {
            &#34;type&#34;: &#34;string&#34;
        },
        &#34;origin&#34;: {
            &#34;type&#34;: &#34;number&#34;
        },
        &#34;deviceName&#34;: {
            &#34;type&#34;: &#34;string&#34;
        },
        &#34;gateway&#34;: {
            &#34;type&#34;: &#34;string&#34;
        },
        &#34;readings&#34;: {
            &#34;type&#34;: &#34;array&#34;,
            &#34;items&#34;: {
                &#34;type&#34;: &#34;object&#34;,
                &#34;properties&#34;: {
                    &#34;id&#34;: {
                        &#34;type&#34;: &#34;string&#34;
                    },
                    &#34;origin&#34;: {
                        &#34;type&#34;: &#34;number&#34;
                    },
                    &#34;deviceName&#34;: {
                        &#34;type&#34;: &#34;string&#34;
                    },
                    &#34;resourceName&#34;: {
                        &#34;type&#34;: &#34;string&#34;
                    },
                    &#34;profileName&#34;: {
                        &#34;type&#34;: &#34;string&#34;
                    },
                    &#34;valueType&#34;: {
                        &#34;type&#34;: &#34;string&#34;
                    }
                    &#34;value&#34;: {
                        &#34;type&#34;: &#34;string&#34;
                    }
                }
            }
        }
    }
}
``` --&gt;
&lt;h2 id=&#34;filter&#34;&gt;Filter&lt;/h2&gt;
&lt;p&gt;When creating a flow, you may want to filter out data from certain resources (sensors) or from certain devices. You can do this by adding a Filter activity in your flow and configure the Filter activity to filter specific devices and resources.&lt;/p&gt;
&lt;p&gt;For events that meet the filter condition, the pipeline or flow will terminate.  For events not meeting the filter condition, the flow will continue to the next activity.&lt;/p&gt;
&lt;h2 id=&#34;rest-service&#34;&gt;REST Service&lt;/h2&gt;
&lt;p&gt;The REST activity is used to make a request to a REST service; it also accepts the reply returned by the service.&lt;/p&gt;
&lt;h2 id=&#34;inferencing&#34;&gt;Inferencing&lt;/h2&gt;
&lt;p&gt;The Inferencing activity is a REST Service activity customized to call ML Models exposed as REST serives.  The service is configured using the Models Endpoints interface where users can provide the service URL and the input mappings for the service.&lt;/p&gt;
&lt;p&gt;Results from the inference service will be propagated through the pipeline as a new resource.  The name of the new resource will postfixed with the word &amp;ldquo;Inferred&amp;rdquo;.  For example, if the name of the resource used by the model is temperature, the name of the inferred result will be temperature_Inferred.&lt;/p&gt;
&lt;h2 id=&#34;data-publisher&#34;&gt;Data Publisher&lt;/h2&gt;
&lt;p&gt;Data Publisher is used to send events originating from IoT devices to external applications or other pipelines.&lt;/p&gt;
&lt;p&gt;Data Publisher sends IoT events to message brokers such as MQTT, Kafka, AMQP and so on.&lt;/p&gt;
&lt;p&gt;Data Publisher uses the same schema as received by the Data Subscriber.&lt;/p&gt;
&lt;p&gt;After adding a Data Publisher activity, you must configure it with the transport protocol from the list of configured protocols.&lt;/p&gt;
&lt;h2 id=&#34;rules&#34;&gt;Rules&lt;/h2&gt;
&lt;p&gt;The Rules activity is used to implement basic rules on data coming from IoT devices.&lt;/p&gt;
&lt;p&gt;A Rule constitutes of multiple Conditions and the rule triggers when all its conditions pass.&lt;/p&gt;
&lt;p&gt;A Condition is an expression involving data from the IoT device. When the expression evaluates to true, the condition passes.&lt;/p&gt;
&lt;p&gt;A Action is a function that is invoked each time the evaluation of all its conditions is true.&lt;/p&gt;
&lt;p&gt;One of the actions of the Rules activity is a notification.  The notification can be send to external application by using the Notification Publisher activity.&lt;/p&gt;
&lt;h2 id=&#34;streaming&#34;&gt;Streaming&lt;/h2&gt;
&lt;p&gt;IoT devices have the potential for producing millions or even billions of events at rapid intervals, often times the events on their own are meaningless, hence the need to provide basic streaming operations against the slew of events.&lt;/p&gt;
&lt;p&gt;The Streaming activity provides the following functionality:&lt;/p&gt;
&lt;p&gt;Enables apps to implement basic streaming constructs in a simple pipeline fashion
Provides non-persistent state for streaming operations
Streams are persisted in memory until the end of the pipeline
Serves as a pre-process pipeline for raw data to perform basic mathematical and logical operations. Ideal for feeding ML models
Filter out the noise with stream filtering capabilities&lt;/p&gt;
&lt;p&gt;After adding a Streaming activity, you must configure it with the desired device resource to stream, the operation to use to aggregate events, and the type of aggregation window to use.&lt;/p&gt;
&lt;h2 id=&#34;data-store&#34;&gt;Data Store&lt;/h2&gt;
&lt;p&gt;The Data Store activity enables users to run SQL insert operation on several supported data stores like Postgres, Oracle, Snoflake, MySQL, etc, and store IoT device data to the selected data store.&lt;/p&gt;
&lt;p&gt;After adding a Data Store activity, you must configure it with the desired data store from the list of configured data stores.&lt;/p&gt;
&lt;h2 id=&#34;notification-publisher&#34;&gt;Notification Publisher&lt;/h2&gt;
&lt;p&gt;The Notification Publisher activity allows users to send notification messages to external applications. The activity can be placed after activities generating notifications like the Rule activity.  All the notifications generated by the activity will be routed to the Notification activity and send to external applications using the pre-configured messaging protocol.&lt;/p&gt;
&lt;h2 id=&#34;flogo-flow&#34;&gt;Flogo Flow&lt;/h2&gt;
&lt;p&gt;TIBCO Labs Project AIR pipelines allow users to import TIBCO Flogo applications and be deployed to the edge as any other project AIR pipeline.&lt;/p&gt;
&lt;p&gt;After adding a Flogo Flow activity, you must configure it with the desired service port and the json file containing the Flogo App configuration.  The user can also overrride properties values exposed by the Flogo application.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Data Pipelines Details</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/userguide/datapipelines/</link>
      <pubDate>Mon, 25 May 2020 12:36:01 -0400</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/userguide/datapipelines/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;
&lt;p&gt;TIBCO Project AIR enables users to configure flows/business logic with data from edge devices.
Users can configure a Data Pipeline (Data Flow) to sequence, filter, stream data and specify a data store based on your business logic.
A typical pipeline configuration consists of activities that define the messaging protocol to receive data, define operations on the data (filtering, streaming, inferencing, rules) and the data stores.
This section will guide you through all the steps required to  create data pipelines.&lt;/p&gt;
&lt;h2 id=&#34;architecture-overview&#34;&gt;Architecture Overview&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;./air_pipelne_architecture.png&#34; alt=&#34;Pipeline Architecture Overview&#34;&gt;&lt;/p&gt;
&lt;p&gt;Every AIR deployment consist of edge components (devices, edge framework), as well as components that can be colocated at the edge, on premise, or on a private or public clooud.
Devices interact with whole AIR infrastructure through Edgex adapters providing the device&amp;rsquo;s required communication protocol and data standard.  Data traverse through the Edgex layers using an internal Edgex messaging protocol (i.e. MQTT).  Data is standardized and converted into a common schema which can then be used by any application at the Edgex Service Layer (.ie. AIR Pipelines).
AIR Pipelines can be configured from the provided UI which can be running locally or remotely. Pipelines are configured to recieve/subscribe standardized data from devices using the provided Edgex internal messaging protocol, filter, stream, infer, apply rules to the data and then publish the data to other applications.
Data can be published to AIR applications or other pipelines running at the edge or at the cloud.  Applications can use the messaging protocol (i.e. MQTT) provided by AIR infrastructure.
Once the pipelines are configured, pipelines are converted into Flogo Applications, compiled to the desired platform, conteinerized and then deployed.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;h4 id=&#34;prerequisite-1-device-groups-configuration&#34;&gt;Prerequisite 1: Device Groups Configuration&lt;/h4&gt;
&lt;p&gt;Before you begin, make sure the messaging protocols, data stores and models configuration for device groups have been configured. See &lt;a href=&#34;../../tutorials&#34;&gt;here&lt;/a&gt;.
See Configuring Device Groups.&lt;/p&gt;
&lt;h2 id=&#34;adding-data-pipelines&#34;&gt;Adding Data Pipelines&lt;/h2&gt;
&lt;h4 id=&#34;step-1-open-pipeline-editor&#34;&gt;Step 1: Open Pipeline Editor&lt;/h4&gt;
&lt;p&gt;From the Gateways page, select the Device Group you want to configure and click Pipeline Editor Icon.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_gateway_pipeline.png&#34; alt=&#34;Gateway Pipeline Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-pipelines-editor-page-should-be-displayed&#34;&gt;Step 2: The Pipelines Editor page should be displayed.&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline.png&#34; alt=&#34;Pipeline Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-subscribe-to-device-events&#34;&gt;Step 3: Subscribe to device events&lt;/h4&gt;
&lt;p&gt;On the editor canvas, right click and select the Data Subscriber activity.&lt;/p&gt;
&lt;p&gt;Most data pipelines start subscribing to events coming from devices. The Data Subscriber activity allows users to select the source of the device data.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_1.png&#34; alt=&#34;Subscriber image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-4-configure-data-subscriber&#34;&gt;Step 4: Configure Data Subscriber&lt;/h4&gt;
&lt;p&gt;On the activity configuration panel, select and review the messaging protocol&lt;/p&gt;
&lt;p&gt;All the messaging protocols that have previously been configured in the Device Groups Configuration will be available for selection.  Select the source for device events.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_2.png&#34; alt=&#34;Subscriber Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-5-filter-device-data-optional&#34;&gt;Step 5: Filter device data (Optional)&lt;/h4&gt;
&lt;p&gt;Select the devices to filter by selecting the Filter Activity.&lt;/p&gt;
&lt;p&gt;Data can be filtered from going through the pipeline. Right click on the editor canvas and select Filters.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_3.png&#34; alt=&#34;Filter image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-6-configure-filter-activity&#34;&gt;Step 6: Configure filter activity&lt;/h4&gt;
&lt;p&gt;On the activity configuration panel, select device and resource (sensors) data to be filtered. Only the sensor data/resources non-selected in the list will be propagated through the pipeline. Connect activities by selecting the connection ports.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_4.png&#34; alt=&#34;Filter Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-7-publish-device-data&#34;&gt;Step 7: Publish device data&lt;/h4&gt;
&lt;p&gt;On the editor canvas, right click and select the Data Publisher activity.&lt;/p&gt;
&lt;p&gt;Device data can be published to any messaging protocol that has been previously configured in the Device Groups connection pages.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_5.png&#34; alt=&#34;Publisher image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-8-configure-data-publisher&#34;&gt;Step 8: Configure Data Publisher&lt;/h4&gt;
&lt;p&gt;On the activity configuration panel, select and review the messaging protocol&lt;/p&gt;
&lt;p&gt;All the messaging protocols that have previously been configured in the Device Groups Configuration will be available for selection.  Select the destination for device events.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_6.png&#34; alt=&#34;Publisher Config image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-9-name-and-save-data-pipeline&#34;&gt;Step 9: Name and Save Data Pipeline.&lt;/h4&gt;
&lt;p&gt;After entering pipeline name, deployment target and deployer type, save the pipeline configuration.  The configuration can then be deployed to a Kubernetes cluster either local or on the cloud.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_config_pipeline_7.png&#34; alt=&#34;Pipeline Save image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;deploying-data-pipelines&#34;&gt;Deploying Data Pipelines&lt;/h2&gt;
&lt;p&gt;Once data pipelines have been configured, they can be deployed dynamically to Kubernetes cluster running locally or on the cloud.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-pipeline-from-the-pipelines-table-and-then-click--deploy-pipeline&#34;&gt;Step 1: Select the desired pipeline from the Pipelines table and then click  Deploy Pipeline&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_pipeline_1.png&#34; alt=&#34;Pipeline Deploy Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-pipeline-is-deployed-and-should-show-the-status-as-readydeployed&#34;&gt;Step 2: The pipeline is deployed and should show the Status as Ready/Deployed&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_pipeline_2.png&#34; alt=&#34;Pipeline Deploy Result image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;verifying-data-pipelines-deployment&#34;&gt;Verifying Data Pipelines Deployment&lt;/h2&gt;
&lt;p&gt;After a pipeline is deployed from the UI, a Docker container is started in the deployment target machine.
There are several ways to verify the container is up and running. In this section we will use Docker Desktop to verify and inspect the deployed contianer.&lt;/p&gt;
&lt;h4 id=&#34;step-1-note-id-of-deployed-pipeline&#34;&gt;Step 1: Note Id of deployed Pipeline&lt;/h4&gt;
&lt;p&gt;After the pipeline is deployed, a new entry will be shown in the pipelines table.  Note the id of the pipeline as that will be used to identify the running container.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_verify_1.png&#34; alt=&#34;Verify Pipeline Deploy image1&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-open-docker-dashboard&#34;&gt;Step 2: Open Docker Dashboard&lt;/h4&gt;
&lt;p&gt;Open Docker Dashboard UI and select the Containers/Apps tab. A list of all running containers is shown.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_verify_2.png&#34; alt=&#34;Verify Pipeline Deploy image2&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-3-inspect-container&#34;&gt;Step 3: Inspect Container&lt;/h4&gt;
&lt;p&gt;From the list of containers, select and open the container matching the Id noted in Step1.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_verify_3.png&#34; alt=&#34;Verify Pipeline Deploy image3&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-4-viewing-container-logs&#34;&gt;Step 4: Viewing Container Logs&lt;/h4&gt;
&lt;p&gt;After container is selected, select the LOGS tab to view the container logs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_verify_4.png&#34; alt=&#34;Verify Pipeline Deploy image4&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-5-viewing-container-stats&#34;&gt;Step 5: Viewing Container Stats&lt;/h4&gt;
&lt;p&gt;From selected container panel, select the STATS tab to review container&amp;rsquo;s cpu usage, memory usage, etc.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./air_deploy_verify_5.png&#34; alt=&#34;Verify Pipeline Deploy image5&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;updeploying-data-pipelines&#34;&gt;Updeploying Data Pipelines&lt;/h2&gt;
&lt;p&gt;If data from a device is not longer required or if needs to be modified, you can undeploy the pipeline.  Undeploying will remove the engine processing the data from the Kubernetes cluster.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-pipeline-from-the-pipelines-table-and-then-click-undeploy-pipeline&#34;&gt;Step 1: Select the desired pipeline from the Pipelines table and then click Undeploy Pipeline&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_undeploy_pipeline_1.png&#34; alt=&#34;Pipeline Undeploy Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-pipeline-is-undeployed-and-should-show-the-status-as-undeployedsaved&#34;&gt;Step 2: The pipeline is undeployed and should show the Status as Undeployed/Saved&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_undeploy_pipeline_2.png&#34; alt=&#34;Pipeline Undeploy Final image&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;deleting-data-pipelines&#34;&gt;Deleting Data Pipelines&lt;/h2&gt;
&lt;p&gt;If data pipelines are not longer required, you can delete the pipeline. Notice that deployed pipelines can&amp;rsquo;t be deleted.  They need to be undeployed first.&lt;/p&gt;
&lt;h4 id=&#34;step-1-select-the-desired-pipeline-from-the-pipelines-table-and-then-click--delete-pipeline&#34;&gt;Step 1: Select the desired pipeline from the Pipelines table and then click  Delete Pipeline&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;./air_delete_pipeline_1.png&#34; alt=&#34;Pipeline Delete Select image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;step-2-the-pipeline-is-deleted-and-should-not-appear-in-the-pipelines-table&#34;&gt;Step 2: The pipeline is deleted and should not appear in the Pipelines table.&lt;/h4&gt;
&lt;h2 id=&#34;subscribing-to-data-published-by-pipelines&#34;&gt;Subscribing to data published by Pipelines&lt;/h2&gt;
&lt;p&gt;Data published by AIR pipelines is available to other pipelines or to any external application that has access to the AIR messaging infrastructure (i.e. MQTT).
Applications with permissions to connect to the messaging infrastructure can subscribe to the published data.
The following section provides the topic and schema of the data users need to use to receive data from AIR pipelines.&lt;/p&gt;
&lt;h4 id=&#34;topic-edgexgatewaydata&#34;&gt;Topic: EdgexGatewayData&lt;/h4&gt;
&lt;h4 id=&#34;message-schema&#34;&gt;Message Schema:&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-JSON&#34; data-lang=&#34;JSON&#34;&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;MQTTSubscriber&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;topic&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;required&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;retained&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;boolean&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;required&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;qos&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;integer&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;required&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;body&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;$schema&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://json-schema.org/draft-04/schema#&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;device&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;gateway&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;readings&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;array&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;object&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
                        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;properties&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;origin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt;
                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;device&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
                            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;value&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
                                &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;type&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;string&amp;#34;&lt;/span&gt;
                            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
                        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Property&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Event represents a single measurable event read from a device. Event has a one-to-many relationship with Reading&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;Uniquely identifies an event, for example a UUID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;device&lt;/td&gt;
&lt;td&gt;Identifies the source of the event; the device&amp;rsquo;s name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;origin&lt;/td&gt;
&lt;td&gt;A timestamp indicating when the original event/reading took place. Most of the time, this indicates when the device service collected/created the event&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;gateway&lt;/td&gt;
&lt;td&gt;Indicates the location or gateway where the event originated&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;readings&lt;/td&gt;
&lt;td&gt;A collection (one to many) of associated readings of a given event.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;id&lt;/td&gt;
&lt;td&gt;Uniquely identifies a reading, for example a UUID&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;origin&lt;/td&gt;
&lt;td&gt;A timestamp indicating when the original event/reading took place. Most of the time, this indicates when the device service collected/created the event&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;device&lt;/td&gt;
&lt;td&gt;Identifies the source of the reading; the device&amp;rsquo;s name.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;name&lt;/td&gt;
&lt;td&gt;name-value provide the key/value pair of what was sensed by a device. Name specifies what was the value collected. Name should match a device resource name in the device profile.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;value&lt;/td&gt;
&lt;td&gt;The sensor data value&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Tutorials</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/tutorials/</link>
      <pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/tutorials/</guid>
      <description>
        
        
        &lt;h1 id=&#34;list-of-videos&#34;&gt;List of Videos&lt;/h1&gt;
&lt;p&gt;We created a list of short Introduction Videos for you to get a quick overview.&lt;br&gt;
Full Playlist on &lt;a href=&#34;https://www.youtube.com/playlist?list=PL9ppsUzagLHu14pyyjSyHyiUNQWngAvIu&#34; target=&#34;_blank&#34;&gt;YouTube here&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;general-overview&#34;&gt;General Overview&lt;/h2&gt;
&lt;p&gt;What is Project AIR about, a quick intro &amp;hellip;&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/FReJYGKA3rk&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;ui-intro&#34;&gt;UI Intro&lt;/h2&gt;
&lt;p&gt;Overview of the User Interface&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/km_Y5nGfvm8&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;message-connections&#34;&gt;Message Connections&lt;/h2&gt;
&lt;p&gt;How to configure a Message Broker Connection, e.g. MQTT, Kafka, AMQP&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/G_Yp6zVOBWs&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;ds-connections&#34;&gt;DS Connections&lt;/h2&gt;
&lt;p&gt;How to configure a Data Store Connections e.g. to PostgreSQL, Snowflake, Oracle, MySQL, &lt;a href=&#34;https://www.tibco.com/products/tibco-graph-database&#34; target=&#34;_blank&#34;&gt;TIBCO Graph Database&lt;/a&gt;, Dgraph&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/zSew9Jr1Jtw&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;ml-model-connection&#34;&gt;ML Model Connection&lt;/h2&gt;
&lt;p&gt;How to create a Connection to a ML Model e.g. via REST&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/fddRjjY5VtA&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;basic-pipe&#34;&gt;Basic Pipe&lt;/h2&gt;
&lt;p&gt;How to define a basic Data Flow to devices&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/21q1F4ko79w&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;basic-pipe-simulation&#34;&gt;Basic Pipe Simulation&lt;/h2&gt;
&lt;p&gt;Usage of simulation data for for devices&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/_yGV0Cul22Y&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;rule-pipe&#34;&gt;Rule Pipe&lt;/h2&gt;
&lt;p&gt;How to use a rule activity in a data flow&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/Q6tDgC4TtTo&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;streaming-pipe&#34;&gt;Streaming Pipe&lt;/h2&gt;
&lt;p&gt;How to use a streaming activity in a data flow&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/wbezN3oAE-U&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;inferencing-pipe&#34;&gt;Inferencing Pipe&lt;/h2&gt;
&lt;p&gt;How to use a inferencing activity in a data flow, to call a ML model and return the results&lt;/p&gt;
&lt;iframe width=&#34;350&#34; height=&#34;230&#34; src=&#34;https://www.youtube.com/embed/ekMfXzeGvzI&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Troubleshooting</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/troubleshooting/</link>
      <pubDate>Mon, 15 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/troubleshooting/</guid>
      <description>
        
        
        &lt;h2 id=&#34;installer-issues&#34;&gt;Installer Issues&lt;/h2&gt;
&lt;details&gt;
&lt;summary&gt;toomanyrequests: Rate exceeded&lt;/summary&gt;
&lt;br&gt;
&lt;p&gt;If you are getting this error, it is likely that you are not logged in to docker.&lt;/p&gt;
&lt;p&gt;Make sure you are logged in to get more pull request limits.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;docker login
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the problem persists, please reach out to us.&lt;/p&gt;
&lt;/details&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Docs: Cheat Sheet</title>
      <link>https://tibcosoftware.github.io/labs-air/docs/cheat-sheet/</link>
      <pubDate>Fri, 12 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tibcosoftware.github.io/labs-air/docs/cheat-sheet/</guid>
      <description>
        
        
        &lt;p&gt;Here you can find additional details and frequently asked questions&lt;/p&gt;
&lt;h2 id=&#34;default-passwords&#34;&gt;default passwords&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;minikube docker/tcuser&lt;/li&gt;
&lt;li&gt;MQTT mosquitto/msquitto&lt;/li&gt;
&lt;li&gt;MQTT mqtt_admin/mqtt_admin&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;default-ports&#34;&gt;default ports&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;f1-proxy 5408&lt;/li&gt;
&lt;li&gt;kong 8000,8001,8443,8444&lt;/li&gt;
&lt;li&gt;kong-db 5432&lt;/li&gt;
&lt;li&gt;edgex-mqtt-brocker 1883&lt;/li&gt;
&lt;li&gt;edgex-vault 8200&lt;/li&gt;
&lt;li&gt;edgex-redis 6379&lt;/li&gt;
&lt;li&gt;edgex-consul 8500&lt;/li&gt;
&lt;li&gt;AIR 10099&lt;/li&gt;
&lt;li&gt;AIR-builder 10083&lt;/li&gt;
&lt;li&gt;AIR-deployer 10082&lt;/li&gt;
&lt;li&gt;AIR-projectmgr 10090, 10091&lt;/li&gt;
&lt;li&gt;AIR-service-locator 10080, 10081&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
      </description>
    </item>
    
  </channel>
</rss>
